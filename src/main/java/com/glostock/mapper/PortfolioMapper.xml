<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0// EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- mapper의 namespace경로에는 마이바티스 설정 인터페이스의 경로(동일이름) -->

<mapper namespace= "com.glostock.mapper.PortfolioMapper">
	
<!-- 마이바티스는 내부적으로 JDBC의 pstmt를 활용하고 ?를 #{속성}으로 처리함
	id 태그의 속성은 인터페이스의 메서드 이름과 동일하게 작성합니다.  
	여러 값을 전달하고 싶은 경우에는 커멘드 객체사용 또는 parameterType속성에 Map을 지정
-->	

	<!--resultType속성값은 select의 결과를 특정 객체로 만들어서 반환 -->
	<!--VO에 기술된 멤버변수는 DB의 컬럼명과 정확히 일치해야 한다. -->
	
	<insert id="insert" > 
	INSERT INTO portfolio_2nd (pfname,ticker,transaction,shares,nickname,price) values (#{pfname,jdbcType=VARCHAR},#{ticker,jdbcType=VARCHAR},#{transaction,jdbcType=VARCHAR},#{shares,jdbcType=VARCHAR},#{nickname,jdbcType=VARCHAR},#{price,jdbcType=VARCHAR})
	</insert>
	
	<select id="select_nick" parameterType="String" resultType="com.glostock.model.PortfolioVO"> 
		SELECT * from portfolio_2nd where nickname=#{nickname,jdbcType=VARCHAR} order by pfnum ASC
	</select>
	
	<select id="select" parameterType="String" resultType="com.glostock.model.PortfolioVO"> 
		SELECT * from portfolio_2nd where pfname=#{pfname,jdbcType=VARCHAR} order by pfnum ASC
	</select>

	<delete id="delete" parameterType="String">
		DELETE FROM portfolio_2nd where pfname=#{pfname}
	</delete>

</mapper>